{"version":3,"sources":["api/api.js","types.js","api/posts.js","components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","api/comments.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","PropTypes","shape","id","number","isRequired","userId","title","string","body","createdAt","updatedAt","request","url","fetch","then","response","json","PostsList","posts","selectPost","useState","currentPostId","setCurrentPostId","setCurrentPost","postId","data","getPostDetails","post","className","length","map","key","type","onClick","NewCommentForm","addComment","name","setName","email","setEmail","setBody","onSubmit","event","preventDefault","placeholder","value","onChange","target","URL","getPostComments","comments","filter","comment","PostDetails","setComments","commentsVisible","setCommentsVisible","useEffect","commentsFromServer","deleteComment","commentId","method","deleteCommentFromServer","prevState","newComment","headers","JSON","stringify","postNewComment","defaultProps","App","setPosts","selectedUserID","setSelectedUserID","selectedPost","setSelectedPost","Promise","resolve","getUserPosts","postsFromServer","userSelect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18ec980c.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import PropTypes from 'prop-types';\n\nexport const PostType = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  userId: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n  createdAt: PropTypes.string.isRequired,\n  updatedAt: PropTypes.string.isRequired,\n});\n","import { BASE_URL } from './api';\n\nconst request = url => fetch(url)\n  .then(response => response.json());\n\nexport const getUserPosts = (userId) => {\n  const url = `${BASE_URL}/posts/`;\n\n  return request(url)\n    .then(response => (+userId\n      ? response.data.filter(post => post.userId === +userId)\n      : response.data));\n};\n\nexport const getPostDetails = (postId) => {\n  const url = `${BASE_URL}/posts/${postId}`;\n\n  return request(url)\n    .then(response => response.data);\n};\n","import React, { useState } from 'react';\nimport './PostsList.scss';\nimport PropTypes from 'prop-types';\nimport { PostType } from '../../types';\nimport { getPostDetails } from '../../api/posts';\n\nexport const PostsList = ({\n  posts,\n  selectPost,\n}) => {\n  const [currentPostId, setCurrentPostId] = useState(0);\n\n  const setCurrentPost = (postId) => {\n    setCurrentPostId(postId);\n    getPostDetails(postId)\n      .then(post => selectPost(post));\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>\n        {`Posts: ${posts.length}`}\n      </h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li\n            className=\"PostsList__item\"\n            key={post.id}\n          >\n            <div>\n              <b>\n                {`[User #${post.userId}]:`}\n              </b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={\n                currentPostId === post.id\n                  ? () => setCurrentPost(0)\n                  : () => setCurrentPost(post.id)\n              }\n            >\n              {currentPostId === post.id ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PostType,\n  ).isRequired,\n  selectPost: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ addComment }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const clearForm = () => {\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        addComment(name, email, body);\n        clearForm();\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={event => setName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={event => setEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={event => setBody(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired,\n};\n","import { BASE_URL } from './api';\n\nconst URL = `${BASE_URL}/comments`;\n\nexport const getPostComments = postId => (\n  fetch(URL)\n    .then(response => response.json())\n    .then(comments => comments.data.filter(\n      comment => comment.postId === +postId,\n    ))\n);\n\nexport const deleteCommentFromServer = commentId => (\n  fetch(`${URL}/${commentId}`, {\n    method: 'DELETE',\n  })\n);\n\nexport const postNewComment = newComment => (\n  fetch(URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(newComment),\n  })\n);\n","import React, { useEffect, useState } from 'react';\nimport { PostType } from '../../types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport {\n  deleteCommentFromServer,\n  getPostComments,\n  postNewComment,\n} from '../../api/comments';\n\nexport const PostDetails = ({ post }) => {\n  const [comments, setComments] = useState([]);\n  const [commentsVisible, setCommentsVisible] = useState(true);\n\n  useEffect(() => {\n    if (post) {\n      getPostComments(post.id)\n        .then(commentsFromServer => setComments(commentsFromServer));\n    }\n  }, [post]);\n\n  const deleteComment = (commentId) => {\n    deleteCommentFromServer(commentId)\n      .then(() => getPostComments(post.id))\n      .then(commentsFromServer => setComments(commentsFromServer));\n  };\n\n  const addComment = (\n    name,\n    email,\n    comment,\n  ) => {\n    const newComment = {\n      postId: post.id,\n      name,\n      email,\n      body: comment,\n    };\n\n    postNewComment(newComment)\n      .then(() => getPostComments(post.id))\n      .then(commentsFromServer => setComments(commentsFromServer));\n  };\n\n  return post && (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>\n          {post.body}\n        </p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => setCommentsVisible(prevState => !prevState)}\n        >\n          {\n            commentsVisible\n              ? `Hide ${comments.length} comments`\n              : `Show ${comments.length} comments`\n          }\n        </button>\n\n        {\n          commentsVisible\n        && (\n        <ul className=\"PostDetails__list\">\n          {comments.map(comment => (\n            <li\n              key={comment.id}\n              className=\"PostDetails__list-item\"\n            >\n              <button\n                type=\"button\"\n                className=\"PostDetails__remove-button button\"\n                onClick={() => deleteComment(comment.id)}\n              >\n                X\n              </button>\n              <p>{comment.body}</p>\n            </li>\n          ))}\n        </ul>\n        )\n}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            addComment={addComment}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.defaultProps = {\n  post: {},\n};\n\nPostDetails.propTypes = {\n  post: PostType,\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport Loader from 'react-loader-spinner';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts } from './api/posts';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [selectedUserID, setSelectedUserID] = useState(0);\n  const [selectedPost, setSelectedPost] = useState(null);\n\n  useEffect(() => {\n    Promise.resolve(getUserPosts(selectedUserID))\n      .then(postsFromServer => setPosts(postsFromServer));\n  }, [selectedUserID]);\n\n  const userSelect = (event) => {\n    const userId = event.target.value;\n\n    setSelectedUserID(userId);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={event => userSelect(event)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          {\n            posts.length > 0\n              ? (\n                <PostsList\n                  posts={posts}\n                  selectPost={setSelectedPost}\n                />\n              )\n              : <Loader />\n          }\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails\n            post={selectedPost}\n          />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}